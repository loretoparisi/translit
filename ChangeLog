CHANGES
=======

* Pipeline: moods, writers, publisher
* Moods, Writer, Publisher datasets
* Pipeline: added Writer, Publisher lyrics
* add entries in pipeline and add writers\_lyrics
* Intelligence#queueBackgroundJobs: added queueJobPipelineUpdate; doBackgroundTasks: added doTaskUpdatePipeline
* Pipeline: Writers, Moods pipelines
* Pipelines: writers, moods: fixes
* add writers creation dataset
* add getallpublishers in pipeline
* merge
* merge
* Added Writers pipeline
* Added Musixmatch Pipeline helper
* v5.1.2 build 20190412
* Added module Kuroshiro; fixes;
* Console: fixes to MXMViz; Catalogue#doCrowdUserGenresGet to retrieve Crowd User top genres
* Updated Lyrics Quality example
* Minified assets
* Dockerfile: fixed env, run script
* Added package lock file
* IndicTrans: removed logging
* Catalogue#doDictionaryPost: added deepCompareKeys to compare dictionary changes
* Dataset API docs;
* Catalogue: doDictionaryPost - merge dictionary; Console: JSON Editor
* Console: Dictionary for LyricsTrans; Catalogue: doDictionaryGet,doDictionaryPost;
* FileWatcher: thread non-interrupting mode; handling SIGINT, SIGKILL
* Added DictionaryLoader to IndicTrans; bug: close FileWatcher at SIGINT
* Added Dictionary, FileWatcher, Singleton Mixin
* API: added crowd.user.moderate.post with NSFW inference from image
* IndicTrans: updated Dictionaries: by language and added HIN and TEL
* tests: added more modules to pipeline
* tests: lyrics translation quality api
* lyricsTransliteration: fixes; doLambdaAnalysis: removed zh to zh-Hant; Intelligence:doLyricsTranslationQualityPost: added ai\_quality\_score,ai\_quality\_error,ai\_quality\_threshold
* IndicTrans: added to dictionary HI word है
* Intelligence#doLyricsTranslationQualityPost: line and document prediction
* Intelligence, APIHelper, Agent: doLyricsTranslationQualityPost
* Catalogue: added doPublisherArtistsGet, doPublisherWritersGet; Console: added Publisher>Writers,Artists
* Catalogue, APIHelper, Agent: doPublisherTracksGet, doWriterTracksGet, doArtistTracksGet, doPublisherGenresGet, doWriterGenresGet, doArtistsGenresGet; Console: updated Artist, Publisher, Writer with Genres
* Catalogue: added doPublisherTracksGet, doWriterTracksGet: retrieve tracks of Writer and Publisher; Console: added Genres % for Writer and Publisher
* Console: LyricsQuality app update
* Console: added LyricsQuality APP
* submodule update
* Console: added Lyrics Quality test app; API: added translations api; fixes
* Console: updated NSFW; Master, Worker, lowered error level to ERROR in production
* Console: updated Community > User
* Tensorflow.js added; removed Tensorflow-Java
* Intelligence: added doCrowdUserModerateGet; ModuleHelper: added module NSFW; Console: new api crowd.user.moderate.get; API, API: new api;
* added NSFW module
* refactoring: removing unused packages: mturk,darknet,starspace
* Intelligence, Catalogue, LambdaOperation: lowered logging from error to warn
* LambdaOperations#lyricsTransliteration fixed default language to detected language for source\_lang
* Added IndicTrans
* LambdaOperations: speed up 5x lyrics transliteration
* lyricsTransliteration: improvements to indicTransliterator.transliterate line by line; API: fixes for Lyrics.Quality.Post
* API: refactoring for Lyrics.Quality.Post
* updated submodules
* Added API doLyricsQualityPost endpoint:lyrics.quality.post
* LambdaOperations#lyricsTransliteration: fixes and speed-up transliteration line by line
* Updated submodules
* Intelligence: fallback to CLD2 for indian languages; bumped langID minimal threshold;LambdaOperations#lyricsTransliteration: added sentence level support;
* Intelligence#doClassify: added CLD2 ensembled langID
* Intelligence#doClassify: ensemble langID model with LanguageDetector.detectCLD
* v4.9.5 build20190311
* LambdaOperations: fixes to lyricsSpelling; refactored lyricsNLP for language model and entities indexes
* Apple Music: changed video\_identifier field
* LambdaOperations#lyricsSpelling: fixed multiple instances bug;
* AppleMusic: retrieve video from DB
* AppleMusic Moods: added track\_spotify\_id
* AppleMusic+Moods: fixed quoting
* Training: testing Moods metadata analysis
* Apple Music: added Playlist Dataset
* LambdaOperations: fixes to lyricsSpelling for predict of type
* LambdaOperations: lyricsSpelling refactoring; Intelligence, ModuleHelper: added LanguageDetector module;
* Console>Artist>Meta: added born, died in Bio box; added instruments
* Console>Trainig: update page
* Master, Worked: fixed start adding ECONNREFUSED to error trap
* API: updated DASH routing
* removed unsused js dependency
* API: Dash Server Reverse Proxy
* Console: layout cleanup
* Dockerfile: improvements to docker image build; Console>Training pane
* Docker: optmization for docker build; Ubuntu18.04 bump
* Tsung load test bump to 1.7.0
* Console>Playlists: added more playlists
* Added Entity based playlists
* Console>Explore HOT FIX for artist deduplication
* Console, Catalogue, APIHelper: new apis; fixes;
* Fixes to Redis Cache
* Console>Explore>Community: moved to AJAX favorites, feedback, top artists
* APIHelper: added endpoint for crowd apis; Master, Worker: added ignoring ERR\_HTTP\_HEADERS\_SENT
* Fixes to Console
* Tensors update script
* LambdaOperations: fixes to LDA analysis
* Fixed LambdaOperations:writerLDA,artistLDA,genreLDA
* v4.8.7 build20180222
* Console: Mood Playlists; fixes
* Console: added Explore > Playlist; added Playlist page
* Major fixes to Console; added AppleMusic pane
* Updated fonts; Fixes to Search; Updated Genres images;
* AppleMusic Activities Dataset
* Apple Music activities test
* Moods dataset import
* tests for lyrics views
* TrackSpamDataset,TrackLyricsAnalysis: refactoring
* TrackSpamDataset: refactoring
* TrackSpamDataset: fixes
* Cataloge:doTrackChartGet,doArtistChartGet updated;TrackSpamDataset,TrackLyricsAnalysis: using LanguageDetector module£
* Catalogue: refactored Chart API
* Hangul module
* TrackSpamDataset: refactored to use MusixmatchPlatform and MusixmatchCatalogue
* LyricsTrans: added Korean; LambdaOperations, Intelligence, ModuleHelper: added Hangul module
* API Docs: updated Lyrics.Transliteration.Post
* DatasetHelper#updateReports: dataset reports
* Console: transliterationa and spelling app: fixed replaceTokens to support Unicode word boundaries
* Lyrics Trans: check source and target token to fix language mixin
* LambdaOperations#lyricsTransliterate: check multiple language detection
* Console: LyricsTrans, LyricsSpell fixes, UI upgrade; transliteration api: added marathi (MR)
* LyricsTrans app: fixed sentence analysis
* Fixes to LyricsTrans App
* Console: Modules page: platform.module.load api fixes
* ModuleHelper: fixed reloadModule; loadModule; Console: LyricsTrans App
* tensor upload script fixed
* ModelHelper: added ftindic model; added indic dataset; Intelligence#doClassify: added ftindic model
* TrackLyricsAnalysis: refactored loadDataSetVerifiedLyrics,loadDataSetLyricsViews to support days interval; added artist\_id in lyrics dataset
* DatasetHelper: fixes; removed unused code
* taskhelper: queueJobSpamAnalysisUpdate;queueJobLyricsAnalysisUpdate
* DatasetHelper: support for model versioning; ModelHelper: fixes
* intelligence, modulehelper: refactored getModuleInstance
* intelligence, modulehelper: refactored getModuleInstance
* merged node and intelligence repo
* TrackLyricsAnalysis: fixed loadDataSetVerifiedLyrics; LambdaOperations: added stopwords analysis
* TaskHelper: added queueJobLyricsAnalysisUpdate; Master: firing removeBackgroundJobs on leader de-election
* TrackLyricsAnalysis: added analyzeLyrics
* TrackLyricsAnalysis: refactoring; ModelHelper: fixes to model loading
* ModuleHelper, Intelligence: fixes to module versioning; TrackLyricsAnalysis: using Catalogue
* Tone: added model v2
* fixed app LyricsTrans
* Dockerfile: fixed indic-trans installation with shallow copy
* API: rateLimiterMiddleware filter api path
* LambdaOperations:lyricsNLP: added commontrack\_id,artist\_id to entitiesUpdate
* LyricsTrans: automatically adjust source and target lang based on language detection
* LyricsTrans: fixed url parameters
* Templates: fixed local vars
* Console: removed Embedding panel
* LambdaOperations: trackAudio to support media\_type = youtube
* LyricsTrans: fixes; added roman language detection
* Catalogue: added guard in doTrackAnalysisPost
* APIHelper: added RateLimiterMemory
* assets update scripts; merged submodules
* Intelligence:doClassify: normalization for language model
* v4.6.9-20181121
* fixes in Console>Track>Languages
* LambdaOperations: lyricsNLP, artistNLP, genreNLP, writerNLP - added entitiesUpdate; lyricsSpelling - added spellingUpdate
* Intelligence:doClassify - improved text normalization with removeAllPunctations
* Tsung testing script
* Scripts: count\_class - added count of tot columns
* Intelligence, Catalogue: added MXMSearch to support Entities, Spelling Search Index; Fixed MediaServer range requests
* LambdaOperation:lyricsSpelling added language; updated console;
* TextAnalyzer: fixed MapToTokensP,MapToTokens for characterOffsetBegin,characterOffsetEnd calc
* Fixed regex in TreebankCMUTokenizer
* Fixes to lyricsSpelling
* Intelligence:getLambdaModules now inits the module data; LambdaOpertaion:getSpelling to support language model cache
* Intelligence.getLambdaModules: call to doUpdateLanguageModel
* TextAnalyzer as a language module; added LambdaOperations.doUpdateLanguageModel;
* API: added start and end parameters for Media Streaming API; updated Track Audio docs
* Agent.doAPIRouting: fixed message parsing
* LambdaOperation:lyricsSpelling fixes; api: added metrics for spelling, transliteration
* Catalogue: added doLyricsAnalysisPost; Agent: added doAPIRoting for lyrics analysis post
* intelligence,agent,catalogue: analysis routing with Agent.doAPIRouting
* Moved to Catalogue: doTrackAudioAnalysisPost,doTrackAudioAnalysisFetch
* Intelligence: api refactoring; Catalogue: moved here track audio apis
* agent,intelligence,catalogue refactorint
* Intelligence, Agent: modules refactoring
* removed datasource from master; code cleanup
* Dockerfile refactoring: indic-trans release; cleanup files
* Agent: caching for doClassify,doLyricsClassifyPost,doLyricsAnalysisPost
* Intelligence: doLambdaAnalysis, getLambdaModules; Agent: added caching;APIHelper: fixed prepareResponse headers
* Master: PubSub broadcast updateInterval and keepAliveTimeout timers
* Master, Worker: pubsub refactoring;startup speedup
* Catalogue.doTrackAnalysisGet: enqueue\_analysis off, removed recommender tab from track
* ModuleHelper:disabled unused modules;Platform.getConfig now returns config; removed CLD Language Detector module
* Dockerfile: bump node.js version  to 8.10.12 instead of LTS due to uncompatibility issues
* SpellChecker example app; TextAnalyzer: min token size
* added spell checker APP
* Updated Track Wiki Analysis wiki\_lang parameter
* Intelligence.doTrackAnalysisFetch,doTrackAnalysisPost: added wiki\_lang param
* LambdaOperations.lyricsSpelling: mixed languages support (optional)
* Intelligence.doLambdaAnalysis: support for multiple modules by language;detectLyricsLanguage: defaults options; LambdaOperations: module by language
* added Spelling modules; fixes to Console Playground; added Spelling to Console Track
* added predict=line to classification analysis; fixes to MediaServer.listLocal apis
* new endpoint lyrics.similarity.post to compare lyrics with Word2Vec+WMD metrics
* Updated docs
* lyrics.classify.post: added predict parameter for multiple lines analysis
* Added Dataset info
* Fixes to LambdaOperations.lyricsTransliteration
* submodules sync
* Console: vocals\_instrumental on media page; LambdaHelper: vocal\_instrumental ananalysis, ft\_tokenize parameter to seq2seq model
* LambdaOperations.lyricsTransliteration added model, version to support seq2seq
* Updated Tutorial; added module WanaKana; api endpoint fixes
* Master, Worker: refactored express init in API; fixed roman dataset build tool
* Added audio analysis: waveform, spectrum, vocal\_instrumental;
* Added FastText Roman Language Classifier to Modules, Console, API
* conversion script for romanic datasets
* Dockerfile: bumped JDK to 9.0.1
* app icons
* Transliteration app: added examples
* fixes to transliteration app
* automatic update keyboard on detected source language
* Set keyboard default layout as fallback
* App: added transliteration example
* Timeout handling to HTTP Server; added metrics to track.audio.analysis api; added source\_lang and target\_lang parameters to lyrics.translate.post
* added jupyter notebook for transliteration
* lyricsTransliteration: removed trailing char; updated default settings for transliteration anallysis part
* fixed run and build for local testing
* DatasetHelper: fixes to skip download; LambdaOperations: passed lang\_id output to lyricsTransliteration
* Fixed ISO-639-2 code for Bengali:bn
* Added module IndicTrans: indian languages transliterator
* removed CoreNLP disabling
* v4.4.8
* Fixed bug: missing resolve in LambdaOperations:doLyricsSubtitlesDiff
* Console: fixes to User Genres Pie Chart
* MediaServer: fixes to Import
* Track.Audio.Analysis with MusicID; api docs;
* MediaServer: added Audio Track Meta data; better import alerts; Track: fixes to nlp dataviz
* MediaServer: added Audio Track Meta data; better import alerts; Track: fixes to nlp dataviz
* Media Server: media analysis download
* Better deploy script
* MediaServer: import from CSV or by ID
* MediaServer: fixes to file upload form
* MediaServer: media import by id or CSV
* MediaServer: waveform
* Console#Media: Waveform
* MediaServer
* added MediaServer
* Master: custom logging to master api: skip all status codes apart errors
* LambdaOperations: added trackAudioAnalysis and trackAudioFeatures for low level and high level audio features
* LambdaOperations: added trackAudioAnalysis and trackAudioFeatures for low level and high level audio features
* LambdaOperations: updated doGetUserBlobSubtitles with blob=1; Tutorial: markdown plus json prettifier
* LambdaOperations: fixes to lyricsSubtitleCluster, trackSubtitlesCluster; API: added StatsD metrics
* Subtitle Analysis: fixes to Notebook
* Updated Notebook
* Added Jupyter Node.js notebook; Added Streaming Server Mp3 API
* Fixed TaskHelper cron tab
* Dockerfile: added ffmpeg, added MXM\_AUDIO env
* Intelligence: MediaServer: temp and media Dir; added Track.Audio.Analysis.Fetch api
* Intelligence: added MediaServer instance; LambdaOperation.trackAudio: mediaServer module
* LambdaOperations: trackAudio, trackFileId fixes
* Intelligece.doTrackAudioAnalysisPost; Catalogue.doTrackAudioAnalysisGet; LambdaOperations: trackAudio, trackFileId
* v4.3.1-20180713
* Updated with CoreNLP for IT (Tint)
* LambdaOperations: fixed doLyricsAnalysisPost to handle subtitles\_cluster analysis
* LambdaOperations: implemented new SubtitleAnalyzer.optimalCentroidM; express added json limit
* getartistlyrics test fix
* Console: added chart analysis; LambdaOps:fixed lyricsTransliteration, lyricsLanguage, lyricsSubtitlesDiff; ModuleHelper: added KakasiTransliterator
* LambdaOperations: added user\_subtitles\_cluster; fixes in LambdaOperation.trackWiki;
* APIHelper: fixed ensemble apis; added Tutorial docs; markdown support
* LambdaOperations: doLyricsSubtitlesDiff, lyricsSubtitlesDiff: support for Number Normalization for en; romaji for ja
* LambdaOperation: guard on genres files in artistWiki
* LambdaOperations: fixes to subtitleCluster centroids output
* LambdaHelper: added platform agent; added doGetUserBlobSubtitles, subtitleCluster; new analysis part subtitles\_diff, subtitles\_cluster
* PageRenderer: fixed url parser; Catalogue:doSubtitlesAnalysisPost added SubtitleRichSyncDiff support
* API switch between dev and prod
* API Docs: subtitles.analysis.post
* Subitle API docs;
* Catalogue:doSubtitlesAnalysisPost multiple subtitles support
* Catalogue: added doSubtitlesAnalysisPost API
* Console. Graph fixed configuration;
* Catalogue: WikidataGenres mapping file path
* v4.0.4: Genre Graph, App, Artist Contributors, Analysis Parameters, Phonemes, Romanization
* LambdaOperations: added PHONEMES, TRANSLITERATION apis; updated docs
* Console: Diff and Sync Apps; Modules: update config for new NLP Sentiment Tensorflow
* Console: added APP with Diff, Sync tool
* Fixes to LambdaOperations.doTracksLambdaAnalysis
* Console.Artist: added GENRE tab and Stats; LambdaHelper: fixed execute task;
* Console>Artist: added Top Contributors
* LambdaOperations: moved lambda
* LambdaOperations: refactored Lambda parameters for Service Configuration
* LambdaHelper: refactored service configuration by analysis type
* LambdaHelper: refactored service configuration by analysis type
* LambdaHelper: refactored service configuration by analysis type
* Console: moved Graph to Visualize
* fixed graphdb view
* console: Genres Graph dataviz
* Console: added GraphDB view
* Added GraphDB Genres
* Fixed SPARQL artistNLP query
* LambdaOperations: removed nocache from artistLDA tracks get
* Fixed API timeout
* MXMWiki Config
* Console: fixes to SLANG, ENTITIES
* Service: fixed maxCPU; docker run: added WORKER\_NUM to env
* docker run: Added env MXM\_DIST
* Build, run script: added env MASTER\_PORT, WORKER\_PORT
* Console: better NER, Syntax Status dataviz
* Console: better NER, Syntax Status dataviz
* DatasetHelper: removed fpos stuff
* Cluster: fixed Master node PubSub messaging and Leader auto-election
* Console: small fixes; visualizer: custom ner visualization
* LambdaOperations: fixed trackAudioFeatures
* Catalogue: updated getCatalogueStatus; LambdaOperations and LambdaAnalysis
* Intelligence.doLambdaAnalysis: fixed default lang for artists
* Refactored LambdaHelper and LambdaOperations modules
* Intelligence, LambdaAnalysis: refactored analysis part language check
* LambdaAnalysis: nocache for LambdaOperations.artistWiki
* LambdaAnalysis: nocache
* Catalogue: lyricsNLP language logging
* Catalogue: wikipedia timeout
* CoreNLP: fixed Entities to NLP format
* LambdaAnalysis: refactored ENTITIES to NLP; Modules: removed CoreNLPSentiment integrated in CoreNLP.en; Console: refactoring for analysis part nlp
* LambdaHelper: fixed writerEntities, artistEntities, genreEntities
* LambdaHelper: analysis config
* LambdaAnalysis: added error to analysis output
* LambdaHelper: fixes to audio analysis
* LambdaHelper: added nocache to Wikipedia module
* v3.3.8: instrumental track detection; LambdaHelper: refactoring in LamdaOperations; Catalogue.getCatalogueStatus;
* Console: home page status
* Console: home page status
* Added robotx.txt to Console Web app health check
* v3.3.6
* Lambda: fixes to Artist, Writer Wiki
* Console: Analysis selector by type
* MXMDB: timeout
* LambdaHelper: fixes
* Intelligence.doLyricsAnalysisPost fixes
* LambdaHelper: fixes
* LambdaHelper: regional language for trackWiki and artistWiki
* Console API Docs page
* API: added Track.Features.Get, fixed Track.Wiki.Get, Artist.Wiki.Get
* API: added Track.Features.Get, fixed Track.Wiki.Get, Artist.Wiki.Get
* Console: Fixed Explore page
* LambdaAnalysis: moved to API for Artist, Writer, Genre cluster analysis; Console: Added User NSFW API Call
* LambdaAnalysis: fixed default lang for classification
* Added language parameter to getArtistEntityWikiInfo, getTrackEntityWikiInfo
* Catalogue.doTrackAnalysisGet added mapped\_analysis\_part,filtered\_analysis\_part
* Fixed Agent.doLyricsDataQueryGet; updated Wikipedia config for MXMWIKI
* Console: fixed user link
* Console: fallback to uft-8 double byte encoded items
* Catalogue: refactored getTrack
* updated get track recommendations in Intelligence.doTrackRecommendations
* Intelligence.doTrackRecommendations fixes
* LambdaAnalysis: refactoring; Intelligence: better INSTRUMENTAL track filtering; Recommendations: genre comparation
* Fixed Catalogue.doTrackGet caching
* v3.3.1: Refactored Track, Artist, Writer, Publisher, Genre actions; new track Wiki with Artists compound
* contributions by genre
* Console: Community page with User Genre Stats
* Console>Community: added Stats panel; added ARTISTS LEADERBOARD;
* v3.3.0
* Fixes to Console Platform
* Fixes to Console Platform
* Fixes to Intelligence.doGenreAnalysisPost
* Console: Genre>Entities analysis
* Console: Genre>Entities analysis
* Genres: added Users By Genres; fixes to json encoding in Console Pages
* Console: Genre page; Artist and Tracks by Genre; Catalogue: doTracksSearchByGenre,doArtistsSearchByGenre
* Catalogue, Console: genres
* Catalogue, Console: Genre, Parent and Children Genre
* LambdaAnalysis: called track analysis for each artist track
* Console: Phonems, added IPA font Voces; Entities, Topics, fixed circle packing graph
* Console: fixes to Platform.UpdateUIExploreListData
* Console>Artist: split of analysis by part to reduce json data pressure
* Console: added TTF to Topics export; added CSV Download to Writer Page
* Console: fragments; CSV download of analysis
* fixed submodule musixmatch-intelligence-node-sdk
* fixed submodule musixmatch-intelligence-node-sdk
* merge
* merge
* Fixed musixmatch-node module
* Fixed musixmatch-node module
* Updated README
* Updated README
* Updated README
* Updated README
* Update README.md
* Update README.md
* Update README.md
* Update README.md
* test commit
* test commit
* test commit
* test commit
* Console: Track, Artist: added download button
* Console: Track, Artist: added download button
* Console: Track, Artist: added download button
* Console: Track, Artist: added download button
* added topic term frequency for LDA
* added topic term frequency for LDA
* added topic term frequency for LDA
* added topic term frequency for LDA
* added stopwords and pos tags for non english languages
* added stopwords and pos tags for non english languages
* added stopwords and pos tags for non english languages
* added stopwords and pos tags for non english languages
* Console: Fixed Playground; fixed BRAT visualization for Track>Structure;
* Console: Fixed Playground; fixed BRAT visualization for Track>Structure;
* Console: Fixed Playground; fixed BRAT visualization for Track>Structure;
* Console: Fixed Playground; fixed BRAT visualization for Track>Structure;
* Console: fixed NER colors; fixed Entities vis
* Console: fixed NER colors; fixed Entities vis
* Console: fixed NER colors; fixed Entities vis
* Console: fixed NER colors; fixed Entities vis
* merged
* merged
* merged
* merged
* Console:Artist, Writer: Tracks Classification; Core: improved Ajax queue
* Console:Artist, Writer: Tracks Classification; Core: improved Ajax queue
* Console:Artist, Writer: Tracks Classification; Core: improved Ajax queue
* Console:Artist, Writer: Tracks Classification; Core: improved Ajax queue
* Console: fixed dataviz for ENTITIES; preparing APPS section
* Console: fixed dataviz for ENTITIES; preparing APPS section
* Console: fixed dataviz for ENTITIES; preparing APPS section
* Console: fixed dataviz for ENTITIES; preparing APPS section
* Console: NER Visu fixes for SLANG tag
* Console: NER Visu fixes for SLANG tag
* Console: NER Visu fixes for SLANG tag
* Console: NER Visu fixes for SLANG tag
* v3.2.0
* v3.2.0
* v3.2.0
* v3.2.0
* Console>Track>Entities: fixes to SLANG
* Console>Track>Entities: fixes to SLANG
* Console>Track>Entities: fixes to SLANG
* Console>Track>Entities: fixes to SLANG
* Console>Track>Entities: SLANG table
* Console>Track>Entities: SLANG table
* Console>Track>Entities: SLANG table
* Console>Track>Entities: SLANG table
* Console: Sentiment dataviz: try catch of sentences tokens errors; Platform: added ssplit sentence config
* Console: Sentiment dataviz: try catch of sentences tokens errors; Platform: added ssplit sentence config
* Console: Sentiment dataviz: try catch of sentences tokens errors; Platform: added ssplit sentence config
* Console: Sentiment dataviz: try catch of sentences tokens errors; Platform: added ssplit sentence config
* Console>Track: Syntax: refactored POS, Phonemes; removed Spelling (integrated in Entities)
* Console>Track: Syntax: refactored POS, Phonemes; removed Spelling (integrated in Entities)
* Console>Track: Syntax: refactored POS, Phonemes; removed Spelling (integrated in Entities)
* Console>Track: Syntax: refactored POS, Phonemes; removed Spelling (integrated in Entities)
* Console>Track>Entities: added SLANG to NER dataviz
* Console>Track>Entities: added SLANG to NER dataviz
* Console>Track>Entities: added SLANG to NER dataviz
* Console>Track>Entities: added SLANG to NER dataviz
* v3.1.8: mxm slang module
* v3.1.8: mxm slang module
* v3.1.8: mxm slang module
* v3.1.8: mxm slang module
* merged submodules
* merged submodules
* merged submodules
* merged submodules
* Console: fixed navbar menus for desktop app
* Console: fixed navbar menus for desktop app
* Console: fixed navbar menus for desktop app
* Console: fixed navbar menus for desktop app
* Console: added Download button in Track, Artist, Writer Console
* Console: added Download button in Track, Artist, Writer Console
* Console: added Download button in Track, Artist, Writer Console
* Console: added Download button in Track, Artist, Writer Console
* Console: Explore>Recently Detected, Recently Added: fixed notifications
* Console: Explore>Recently Detected, Recently Added: fixed notifications
* Console: Explore>Recently Detected, Recently Added: fixed notifications
* Console: Explore>Recently Detected, Recently Added: fixed notifications
* Console: Playground>SPARQL: added queries type and mode
* Console: Playground>SPARQL: added queries type and mode
* Console: Playground>SPARQL: added queries type and mode
* Console: Playground>SPARQL: added queries type and mode
* Console>Playground: added SPARQL editor; API: added LyricsData.Query.Get
* Console>Playground: added SPARQL editor; API: added LyricsData.Query.Get
* Console>Playground: added SPARQL editor; API: added LyricsData.Query.Get
* Console>Playground: added SPARQL editor; API: added LyricsData.Query.Get
* Fixed Console>Artist>Stats page
* Fixed Console>Artist>Stats page
* Fixed Console>Artist>Stats page
* Fixed Console>Artist>Stats page

3.1.8
-----

* JS, CSS compress
* JS, CSS compress
* JS, CSS compress
* JS, CSS compress
* Console: Writer: added Stats panel for POS and NGRAM
* Console: Writer: added Stats panel for POS and NGRAM
* Console: Writer: added Stats panel for POS and NGRAM
* Console: Writer: added Stats panel for POS and NGRAM
* Console: POS, NGRAM stats for Track, Artist, Writer; LambdaAnalysis: updated NER, Sentiment API
* Console: POS, NGRAM stats for Track, Artist, Writer; LambdaAnalysis: updated NER, Sentiment API
* Console: POS, NGRAM stats for Track, Artist, Writer; LambdaAnalysis: updated NER, Sentiment API
* Console: POS, NGRAM stats for Track, Artist, Writer; LambdaAnalysis: updated NER, Sentiment API
* DatasetHelper: fixes to embedding
* DatasetHelper: fixes to embedding
* DatasetHelper: fixes to embedding
* DatasetHelper: fixes to embedding
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixes
* Console: fixed Charts cache expire; Artist>Entities,Topics: fixed Flare Graph
* Console: fixed Charts cache expire; Artist>Entities,Topics: fixed Flare Graph
* Console: fixed Charts cache expire; Artist>Entities,Topics: fixed Flare Graph
* Console: fixed Charts cache expire; Artist>Entities,Topics: fixed Flare Graph
* Catalogue, Platform: queueing of analysis for Track, Artist, Writer
* Catalogue, Platform: queueing of analysis for Track, Artist, Writer
* Catalogue, Platform: queueing of analysis for Track, Artist, Writer
* Catalogue, Platform: queueing of analysis for Track, Artist, Writer
* Console: added Metadata>Social panel
* Console: added Metadata>Social panel
* Console: added Metadata>Social panel
* Console: added Metadata>Social panel
* Console: fixes to flare graph ui
* Console: fixes to flare graph ui
* Console: fixes to flare graph ui
* Console: fixes to flare graph ui
* Console: updated client app; fixes to Wikidata lambda
* Console: updated client app; fixes to Wikidata lambda
* Console: updated client app; fixes to Wikidata lambda
* Console: updated client app; fixes to Wikidata lambda
* Project refactoring: musixmatch modules at root level; fixes to Docker files
* Project refactoring: musixmatch modules at root level; fixes to Docker files
* Project refactoring: musixmatch modules at root level; fixes to Docker files
* Project refactoring: musixmatch modules at root level; fixes to Docker files
* Console: Writer entities, topics, wiki
* Console: Writer entities, topics, wiki
* Intelligence, LambdaHelper, APIHelper: Added WRITER analysis
* Intelligence, LambdaHelper, APIHelper: Added WRITER analysis
* Console: added Stats panel in Track Entities; Writer: added Entities, Topics, Meta panels
* Console: added Stats panel in Track Entities; Writer: added Entities, Topics, Meta panels
* updated submodules
* updated submodules
* updated submodules
* updated submodules
* Console: Artist>Wiki: added Web site value
* Console: Artist>Wiki: added Web site value
* Datasource: set api timeout to Wikipedia module; added CSS minifier;
* Datasource: set api timeout to Wikipedia module; added CSS minifier;
* Console:Artist>Wiki fixed api response parsing
* Console:Artist>Wiki fixed api response parsing
* Console: flat UI changes
* Console: flat UI changes
* Console: updated UI; added Artist admin, page links;
* Console: updated UI; added Artist admin, page links;
* Console: updated UI to be musixmatch web site compliant
* Console: updated UI to be musixmatch web site compliant
* updated mxm node sdk
* updated mxm node sdk
* updated submodules
* updated submodules
* v3.1.3 build20180329
* v3.1.3 build20180329
* updated node sdk
* updated node sdk
* Console: Search added Best Match
* Console: Search added Best Match
* Console: fixes on Playground>NLP
* Console: fixes on Playground>NLP
* Updated node sdk
* Updated node sdk
* Updated Musixmatch NLP: sentiment; updated Artist Entities, Topics
* Updated Musixmatch NLP: sentiment; updated Artist Entities, Topics
* updated musixmatch intelligence and musixmatch node
* updated musixmatch intelligence and musixmatch node
* AI API: Track.Analysis.Fetch and Artist.Analysis.Fetch; Artist.Wiki, Track.Wiki;
* AI API: Track.Analysis.Fetch and Artist.Analysis.Fetch; Artist.Wiki, Track.Wiki;
* changes to musixmatch-node sdk
* changes to musixmatch-node sdk
* updated musixmatch node
* updated musixmatch node
* AI API: updated docs
* AI API: updated docs
* Console: Fixed Explore items duplication
* Console: Fixed Explore items duplication
* Added JS Uglify script; PageRenderer: added is\_prod template flag; added uglified js;
* Added JS Uglify script; PageRenderer: added is\_prod template flag; added uglified js;
* merge
* merge
* Console: Track, Playground: refactored Entities, Sentiment, Syntax tabs; LambdaHelper: added Phonemes;
* Console: Track, Playground: refactored Entities, Sentiment, Syntax tabs; LambdaHelper: added Phonemes;
* updated intelligence
* updated intelligence
* Console: Artist added lyrics\_id in tracks list
* Console: Artist added lyrics\_id in tracks list
* Console: Artist added lyrics\_id in tracks list
* Console: Artist added lyrics\_id in tracks list
* Console: added Entities table for Artist
* Console: added Entities table for Artist
* added mxmID to ner
* added mxmID to ner
* Notifications: fixed Artist notification; Console>NER: Palette: added HLS, RGB, lighen, darken color fun; MXMCore: fixed ObjectCache; Service Config: new annotators config
* Notifications: fixed Artist notification; Console>NER: Palette: added HLS, RGB, lighen, darken color fun; MXMCore: fixed ObjectCache; Service Config: new annotators config
* modified ner
* modified ner
* Console: fixed Chart object storage for Track, Artist, Community; LambdaHeklper: execution of analysis in process fork
* Console: fixed Chart object storage for Track, Artist, Community; LambdaHeklper: execution of analysis in process fork
* modified sparql queries
* modified sparql queries
* changes in intelligence-node and in node
* changes in intelligence-node and in node
* Console: added Explore>Community panel with users feedbacks
* Console: added Explore>Community panel with users feedbacks
* Moved LDA to Worker; fixes artist and track pages
* Moved LDA to Worker; fixes artist and track pages
* Disabled users page due to issues in WebApp.allSessions
* Disabled users page due to issues in WebApp.allSessions
* Catalogue: changed caches; Console: Track>Wiki, Artist>Wiki panels; Agent, Intelligence: refactoring;
* Catalogue: changed caches; Console: Track>Wiki, Artist>Wiki panels; Agent, Intelligence: refactoring;
* clustered entities for artistNER
* clustered entities for artistNER
* Lambda Analysis runtime updated
* Lambda Analysis runtime updated
* LambdaAnalysis: runtime for child\_process fork; Console: Artist>NLP UI; ModuleHelper#loadModules to load a list of modules;
* LambdaAnalysis: runtime for child\_process fork; Console: Artist>NLP UI; ModuleHelper#loadModules to load a list of modules;
* taken into account doc frequency in ner
* taken into account doc frequency in ner
* added frequency resize for artist ner
* added frequency resize for artist ner
* LambdaHelper: fixes; Intelligence: splitter NER and Sentiment CoreNLP pipelines due to RNN slow execution
* LambdaHelper: fixes; Intelligence: splitter NER and Sentiment CoreNLP pipelines due to RNN slow execution
* Intelligence, Agent, Catalogue: added artist entities; LambdaAnalysis: support for collections
* Intelligence, Agent, Catalogue: added artist entities; LambdaAnalysis: support for collections
* added artist ner and catalogue test
* added artist ner and catalogue test
* added artist ner to intelligence-node
* added artist ner to intelligence-node
* Added SPARQL categories
* Added SPARQL categories
* Platform#process: fixed bug in cache to string
* Platform#process: fixed bug in cache to string
* Updated AI API Docs
* Updated AI API Docs
* Updated submodules
* Updated submodules
* Fixes to ArtistAnalysis; fixes to Client API
* Fixes to ArtistAnalysis; fixes to Client API
* Updated intelligence sdk
* Updated intelligence sdk
* Updated submodule
* Updated submodule
* Added tests for catalogue; absolute path in Catalogue new
* Added tests for catalogue; absolute path in Catalogue new
* Platform#addExitHandler: added parameters ignoreUncaughtException to gracefully skip server dispose on master; Master#start, Worker#start: set exit handler options ignoreUncaughtException
* Platform#addExitHandler: added parameters ignoreUncaughtException to gracefully skip server dispose on master; Master#start, Worker#start: set exit handler options ignoreUncaughtException
* Intelligence.doLambdaAnalysis default parameters for NER and SENTIMENT updated
* Intelligence.doLambdaAnalysis default parameters for NER and SENTIMENT updated
* Added Word2Vec FastText module
* Added Word2Vec FastText module
* Dockerfile: increased WORKER\_NUM to 8 for production
* Dockerfile: increased WORKER\_NUM to 8 for production
* Fixes to Console core api module
* Fixes to Console core api module
* Added MusixmatchNLP library; fixes to Console JS API: remove usertoken in case of captcha errors
* Added MusixmatchNLP library; fixes to Console JS API: remove usertoken in case of captcha errors
* Catalogue: refactored api to pass nocache param; Console: fixes to Track>NLP; Intelligence: fixes to doTrackAnalysisPost,doArtistAnalysisPost
* Catalogue: refactored api to pass nocache param; Console: fixes to Track>NLP; Intelligence: fixes to doTrackAnalysisPost,doArtistAnalysisPost
* v3.0.0
* v3.0.0
* Added API Track.Wiki.Get, Artist.Wiki.Get
* Added API Track.Wiki.Get, Artist.Wiki.Get
* Dockerfile: added WORKER\_NUM and NODE\_ENV args; Console: fixes to Track>NLP; Catalogue: 7 days cache to analysis; Intelligence: fixes to doTrackAnalysisPost;
* Dockerfile: added WORKER\_NUM and NODE\_ENV args; Console: fixes to Track>NLP; Catalogue: 7 days cache to analysis; Intelligence: fixes to doTrackAnalysisPost;
* Console:fixes to Track>NLP; Disabled ar, zh-Hant NLP modules;
* Console:fixes to Track>NLP; Disabled ar, zh-Hant NLP modules;
* Console: fixes to Track and Artist Analysis
* Console: fixes to Track and Artist Analysis
* LambdaHelper: added wikipedia:artist analysis
* LambdaHelper: added wikipedia:artist analysis
* LambdaHelper: added Wikipedia:track analysis
* LambdaHelper: added Wikipedia:track analysis
* Master: set workers to 4; Agent.execLambdaAnalysis: guard on getLambdaConfig(); Intelligence: off badwords
* Master: set workers to 4; Agent.execLambdaAnalysis: guard on getLambdaConfig(); Intelligence: off badwords
* Agent: added lambda execution to Worker; LambdaHelper: fixed stats object
* Agent: added lambda execution to Worker; LambdaHelper: fixed stats object
* LambdaHelper.exec: fixed nocache; Agent: optional nocache and notification parameters to not null
* LambdaHelper.exec: fixed nocache; Agent: optional nocache and notification parameters to not null
* Fixed analysis module SDK path
* Fixed analysis module SDK path
* ModelHelper, ModuleHelper: fallback model version to default
* ModelHelper, ModuleHelper: fallback model version to default
* Console:Classifier: fixed status update
* Console:Classifier: fixed status update
* Intelligence: added spotify to allowed analysis parts;
* Intelligence: added spotify to allowed analysis parts;
* Intelligence: refactored Track, Artist, Lyrics analysis APIs; fixes in Console; ArtistAnalysisPost: LDA to max 1000 lyrics
* Intelligence: refactored Track, Artist, Lyrics analysis APIs; fixes in Console; ArtistAnalysisPost: LDA to max 1000 lyrics
* Updated API Docs; conditional SDK path by env;
* Updated API Docs; conditional SDK path by env;
* fixes to connection handlers
* fixes to connection handlers
* Platform, Channel: Error Handling for RedisStore
* Platform, Channel: Error Handling for RedisStore
* Added docker ignore; updated run script
* Added docker ignore; updated run script
* Updated base SDK path
* Updated base SDK path
* Initial submodule import
* Initial submodule import
* Initial commit
* Initial commit
